version: 3

# The following line breaks the yml - 404 page not found error
# extends: https://api.github.com/repos/example/pullapprove-config/contents/.pullapprove.yml

# These conditions are processed in order and the first match (if any) will determine the status on the pull request.
overrides:
- if: "any(['release' in labels, 'hotfix' in labels])"
  status: success
  explanation: "Releases, security updates and hotfixes are allowed to merge in integration, staging and/or master"
- if: "not any([base.ref == 'staging', '[Snyk]' in title])"
  status: failure
  explanation: "No PRs from unknown branches can be merged into master"
- if: "'on hold' in labels"
  status: pending
  explanation: "PR review is on hold"
  # Will add a new test for GitLab once that's set up

notifications:
- when: pull_request.opened
  if: "author_association == 'CONTRIBUTOR'" # Only contributing authors get this message
  comment: |
    Hey @{{ author }}, thanks for the PR! The review will start once
    the tests and CI checks have passed.
- when: pullapprove.approved
  if: "author_association == 'CONTRIBUTOR'" # Only contributing authors get this message
  comment: "The review is completed. Thanks @{{ author }}!"

groups:
  snyk-security-patches:
    conditions:
    - "'[Snyk]' in title"
    - "'Security' not in labels"
    reviewers:
      users:
      - ESapenaVentura
      - amnonkhen
      - MightyAx
    reviews:
      required: 1
      request_order: shuffle
      
  azul:
    conditions:
    - "'*[Tt]ravis*' in check_runs.successful"
    - "base.ref == 'master'"
    - "'content' in labels"
    reviewers:
      users:
      - hannes-ucsc
    reviews:
      required: 1
      request: 1
      request_order: shuffle

  browser:
    conditions:
      - "'*[Tt]ravis*' in check_runs.successful"
      - "base.ref == 'master'"
      - "'content' in labels"
    reviewers:
      users:
        - NoopDog
    reviews:
      required: 1
      request: 1
      request_order: shuffle
  
  data_import:
    conditions:
    - "'*[Tt]ravis*' in check_runs.successful"
    - "base.ref == 'master'"
    - "'content' in labels"
    reviewers:
      users:
      - aherbst-broad
      - JeffKorte
      - danicham
    reviews:
      required: 1
      request: 1
      request_order: shuffle
    
  tdr:
    conditions:
    - "'*[Tt]ravis*' in check_runs.successful"
    - "base.ref == 'master'"
    - "'content' in labels"
    reviewers:
      users:
      - ruchim
    reviews:
      required: 1
      request: 1
      request_order: shuffle
      
  ingest-devs:
    conditions:
    - "'*[Tt]ravis*' in check_runs.successful"
    - "base.ref == 'master'"
    - "'content' in labels"
    reviewers:
      users:
      - amnonkhen
      - MightyAx
    reviews:
      required: 1
      request: 1
      request_order: shuffle

  metadata-updates:  # group name
    conditions:  # the group is activated when all of these statements are true
    - "base.ref == 'staging'"
    - "any(['major' in body, 'minor' in body, 'patch' in body])" # major, minor or patch change is indicated in body of PR
    - "'content' in labels"
    # Will add a new condition for GitLab once that's set up
    reviewers:  # people who can approve for this group
      users:
      - ESapenaVentura
      - amnonkhen
      - ruchim
      - aherbst-broad
      - hannes-ucsc
      - NoopDog
    reviews:  # settings for approval and reviewer selection
      request: -1 # review requests will be sent every reviewer in the group
      required: -1 # all users in the group will be required to approve the PR
      request_order: shuffle  # reviewers will be chosen in a random order

  code-review:
    conditions:
    - "'*[Tt]ravis*' in check_runs.successful"
    - "base.ref == 'develop'"
    - "'*.py' in files or '*.js' in files or '*.yml' in files"
    reviewers:
      users:
      - ESapenaVentura
      - ami-day
      - Wkt8
      - idazucchi
    reviews:
      required: 1
      request_order: shuffle
